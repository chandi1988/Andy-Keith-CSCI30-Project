1. personclass (makes the person node with 7 traits) 
-Person class
- def addtoPersonArray (name, age, sex)
	(adds the person node to an array of existing people to be sorted out later)
- def returnPerson():
	returns personArray (array where all the people are stored)
	
2. relationclass (it's a utility class where we kinda store the functions to use when unpacking a file. Helping the processes in the main testulit.py in translating the text to code)
has the data per tree
-def findPerson(name)
	finds a person by name and returns the person node mismo
-def famName(n)
	changes the family's name
-def getFamName()
	returns the family's name
-def numPerson(n)
	
3. testulit (main class that does LCA, make the trees and prints relationships) 
-def FamTreeLoad(familyName)
	it gets the input per family ft file, creates the people and adds them to the person array in personclass)

-def makeTree()
	based on the number of links, it splits them and continually assigns parent and child relationships
	also makes generation counters
-def leastCommonAncestor(n1, n2)
	returns the least common ancestor person node of 2 nodes

-def listAncestors(name)
	returns the names of a person node's ancestors one by one
-def listDescendants(name)
	adds the names of a person node's descendants to an array
-def returnDescendants(name)
	doing listDescendants(name), it prints all the descendants of a person one by one
-def relationship (ppp1, ppp2)
	gets the relationship of 2 person nodes and returns their relationship based on the first one's POV
-def Term (kind, d1, d2, sex)
	helps relationship in determining relationships!